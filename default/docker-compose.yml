services:
  rabbit:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - eazybank
  configserver:
    image: "albertoesteva88/configserver:s6"
    container_name: "configserver-ms"
    ports:
      - "8071:8071"
    depends_on:
      rabbit:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent http://localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    # Util en docker swarm, pero estamos con docker compose
    # deploy:
    #   resources:
    #     limits:
    #       memory: "700m"
    mem_limit: 700m
    networks:
      - eazybank
  accounts:
    image: "albertoesteva88/accounts:s6"
    container_name: "accounts-ms"
    ports:
      - "8080:8080"
    depends_on:
      configserver:
        condition: service_healthy
    # Util en docker swarm, pero estamos con docker compose
    # deploy:
    #   resources:
    #     limits:
    #       memory: "700m"
    mem_limit: 700m
    networks:
      - eazybank
    environment:
      - SPRING_APPLICATION_NAME=accounts
# Cuando usas SPRING_CONFIG_IMPORT para conectarte al Config Server,
# Spring necesita conocer el nombre de la aplicación lo antes posible
# — incluso antes de cargar el YAML del microservicio.
# Por lo que tambien lo agregamos como variable de entorno en este caso
      - "SPRING_CONFIG_IMPORT=configserver:http://configserver:8071"
      - SPRING_PROFILES_ACTIVE=default
  loans:
    image: "albertoesteva88/loans:s6"
    container_name: "loans-ms"
    ports:
      - "8090:8090"
    depends_on:
      configserver:
        condition: service_healthy
    # Util en docker swarm, pero estamos con docker compose
    # deploy:
    #   resources:
    #     limits:
    #       memory: "700m"
    mem_limit: 700m
    networks:
      - eazybank
    environment:
      - SPRING_APPLICATION_NAME=loans
# Cuando usas SPRING_CONFIG_IMPORT para conectarte al Config Server,
# Spring necesita conocer el nombre de la aplicación lo antes posible
# — incluso antes de cargar el YAML del microservicio.
# Por lo que tambien lo agregamos como variable de entorno en este caso
      - "SPRING_CONFIG_IMPORT=configserver:http://configserver:8071"
      - SPRING_PROFILES_ACTIVE=default
  cards:
    image: "albertoesteva88/cards:s6"
    container_name: "cards-ms"
    ports:
      - "9000:9000"
    depends_on:
      configserver:
        condition: service_healthy
    # Util en docker swarm, pero estamos con docker compose
    # deploy:
    #   resources:
    #     limits:
    #       memory: "700m"
    mem_limit: 700m
    networks:
      - eazybank
    environment:
      - SPRING_APPLICATION_NAME=cards
# Cuando usas SPRING_CONFIG_IMPORT para conectarte al Config Server,
# Spring necesita conocer el nombre de la aplicación lo antes posible
# — incluso antes de cargar el YAML del microservicio.
# Por lo que tambien lo agregamos como variable de entorno en este caso
      - "SPRING_CONFIG_IMPORT=configserver:http://configserver:8071"
      - SPRING_PROFILES_ACTIVE=default
networks:
  eazybank:
    driver: "bridge"